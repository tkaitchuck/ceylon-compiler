package com.redhat.ceylon.compiler.java.test.annotations;

@.java.lang.annotation.Retention(.java.lang.annotation.RetentionPolicy.RUNTIME)
@.java.lang.annotation.Target({.java.lang.annotation.ElementType.CONSTRUCTOR})
@interface ConstructorAnnotation$annotation$ {
}
final class ConstructorAnnotation implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.OptionalAnnotation<.com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation, .ceylon.language.meta.declaration.ConstructorDeclaration, .java.lang.Object> {
    
    ConstructorAnnotation(.com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation$annotation$ anno) {
        this();
    }
    
    ConstructorAnnotation() {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation.class);
    
    @.java.lang.Override
    public .java.lang.Class<? extends .java.lang.annotation.Annotation> annotationType() {
        return .com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation$annotation$.class;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.AnnotationInstantiation(
        arguments = {},
        primary = .com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation.class)
final class constructorAnnotation_ {
    
    private constructorAnnotation_() {
    }
    
    static .com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation constructorAnnotation() {
        return new .com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation();
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Class(constructors = true)
class Constructor implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
    
    @.ceylon.language.DocAnnotation$annotation$(description = "docannotation")
    @.com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation$annotation$
    @.ceylon.language.SharedAnnotation$annotation$
    public Constructor(@.com.redhat.ceylon.compiler.java.metadata.Name("s")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    final .java.lang.String s$param$) {
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.test.annotations.Constructor.other_ other_ = null;
    
    @.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final class other_ {
        
        private other_() {
        }
    }
    
    @.ceylon.language.DocAnnotation$annotation$(description = "docannotation")
    @.com.redhat.ceylon.compiler.java.test.annotations.ConstructorAnnotation$annotation$
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.Name("other")
    public Constructor(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    .com.redhat.ceylon.compiler.java.test.annotations.Constructor.other_ $name$, @.com.redhat.ceylon.compiler.java.metadata.Name("s")
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    @.ceylon.language.DocAnnotation$annotation$(description = "ctor param doc")
    final .java.lang.String s$param$) {
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.annotations.Constructor.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.annotations.Constructor.class);
}